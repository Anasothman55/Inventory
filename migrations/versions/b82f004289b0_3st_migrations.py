"""3st migrations

Revision ID: b82f004289b0
Revises: 9f7b7da6188d
Create Date: 2025-03-28 20:38:15.194429

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = 'b82f004289b0'
down_revision: Union[str, None] = '9f7b7da6188d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('categories_uid_key', 'categories', type_='unique')
    op.create_index(op.f('ix_categories_uid'), 'categories', ['uid'], unique=True)
    op.drop_constraint('items_uid_key', 'items', type_='unique')
    op.create_index(op.f('ix_items_uid'), 'items', ['uid'], unique=True)
    op.drop_constraint('purchas_items_uid_key', 'purchas_items', type_='unique')
    op.create_index(op.f('ix_purchas_items_uid'), 'purchas_items', ['uid'], unique=True)
    op.drop_constraint('purchase_uid_key', 'purchase', type_='unique')
    op.create_index(op.f('ix_purchase_uid'), 'purchase', ['uid'], unique=True)
    op.drop_constraint('users_uid_key', 'users', type_='unique')
    op.create_index(op.f('ix_users_uid'), 'users', ['uid'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_uid'), table_name='users')
    op.create_unique_constraint('users_uid_key', 'users', ['uid'])
    op.drop_index(op.f('ix_purchase_uid'), table_name='purchase')
    op.create_unique_constraint('purchase_uid_key', 'purchase', ['uid'])
    op.drop_index(op.f('ix_purchas_items_uid'), table_name='purchas_items')
    op.create_unique_constraint('purchas_items_uid_key', 'purchas_items', ['uid'])
    op.drop_index(op.f('ix_items_uid'), table_name='items')
    op.create_unique_constraint('items_uid_key', 'items', ['uid'])
    op.drop_index(op.f('ix_categories_uid'), table_name='categories')
    op.create_unique_constraint('categories_uid_key', 'categories', ['uid'])
    # ### end Alembic commands ###
